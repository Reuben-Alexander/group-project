{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/Dialog/Dialog.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true\n  }, disableBackdropClick ? {\n    disableBackdropClick: disableBackdropClick\n  } : {}, {\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   * @deprecated Use the onClose prop with the `reason` argument to filter the `backdropClick` events.\n   */\n  disableBackdropClick: deprecatedPropType(PropTypes.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the onClose prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   * @deprecated Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.\n   */\n  onEscapeKeyDown: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),\n\n  /**\n   * Callback fired before the dialog exits.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);"],
  "mappings": "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",
  "names": ["styles", "Dialog", "handleMouseDown", "handleBackdropClick", "PropTypes"]
}
